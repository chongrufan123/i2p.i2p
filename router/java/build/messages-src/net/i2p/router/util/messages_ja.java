/* Automatically generated by GNU msgfmt.  Do not modify!  */
package net.i2p.router.util;
public class messages_ja extends java.util.ResourceBundle {
  private static final java.lang.String[] table;
  static {
    java.lang.String[] t = new java.lang.String[166];
    t[0] = "";
    t[1] = "Project-Id-Version: I2P\nReport-Msgid-Bugs-To: \nPO-Revision-Date: 2019-11-24 13:40+0000\nLast-Translator: abbbb bbbb <a1678991@gmail.com>\nLanguage-Team: Japanese (http://www.transifex.com/otf/I2P/language/ja/)\nLanguage: ja\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=1; plural=0;\n";
    t[2] = "Dropping tunnel requests: High load";
    t[3] = "\u30c8\u30f3\u30cd\u30eb\u8981\u6c42\u3092\u30c9\u30ed\u30c3\u30d7: \u9ad8\u3044\u8ca0\u8377";
    t[4] = "Firewalled";
    t[5] = "\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9";
    t[10] = "IPv4: OK; IPv6: Firewalled";
    t[11] = "IPv4: OK; IPv6: \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9";
    t[12] = "Rejecting tunnels: Hidden mode";
    t[13] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426: Hidden \u30e2\u30fc\u30c9";
    t[14] = "IPv4: Symmetric NAT; IPv6: OK";
    t[15] = "IPv4: \u5bfe\u79f0\u578bNAT; IPv6: OK";
    t[20] = "Dropping tunnel requests: Overloaded";
    t[21] = "\u30c8\u30f3\u30cd\u30eb\u8981\u6c42\u30c9\u30ed\u30c3\u30d7: \u904e\u8ca0\u8377";
    t[24] = "Rejecting tunnels";
    t[25] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d";
    t[30] = "IPv4: Testing; IPv6: Firewalled";
    t[31] = "IPv4: \u30c6\u30b9\u30c8\u4e2d; IPv6: \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9";
    t[38] = "Testing";
    t[39] = "\u30c6\u30b9\u30c8\u4e2d";
    t[44] = "Rejecting tunnels: Bandwidth limit";
    t[45] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u5e2f\u57df\u5e45\u5236\u9650";
    t[54] = "Rejecting tunnels: Shutting down";
    t[55] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u4e2d";
    t[58] = "IPv4: Testing; IPv6: OK";
    t[59] = "IPv4: \u30c6\u30b9\u30c8\u4e2d; IPv6: OK";
    t[62] = "Rejecting tunnels: Request overload";
    t[63] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u30ea\u30af\u30a8\u30b9\u30c8\u904e\u8ca0\u8377";
    t[68] = "OK";
    t[69] = "OK";
    t[70] = "Rejecting tunnels: Limit reached";
    t[71] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u5236\u9650\u306b\u5230\u9054";
    t[74] = "IPv4: Firewalled; IPv6: OK";
    t[75] = "IPv4: \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9; IPv6: OK";
    t[78] = "IPv4: Disabled; IPv6: Firewalled";
    t[79] = "IPv4: \u7121\u52b9; IPv6: \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9";
    t[84] = "Accepting tunnels";
    t[85] = "\u30c8\u30f3\u30cd\u30eb\u3092\u627f\u8a8d\u4e2d";
    t[88] = "IPv4: Disabled; IPv6: OK";
    t[89] = "IPv4: \u7121\u52b9; IPv6: OK";
    t[92] = "Accepting most tunnels";
    t[93] = "\u307b\u3068\u3093\u3069\u306e\u30c8\u30f3\u30cd\u30eb\u3092\u627f\u8a8d\u4e2d";
    t[94] = "Symmetric NAT";
    t[95] = "\u5bfe\u79f0\u578bNAT";
    t[96] = "Rejecting most tunnels: Bandwidth limit";
    t[97] = "\u307b\u3068\u3093\u3069\u306e\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u5e2f\u57df\u5e45\u5236\u9650";
    t[98] = "Dropping tunnel requests: Queue time";
    t[99] = "\u30c8\u30f3\u30cd\u30eb\u8981\u6c42\u3092\u30c9\u30ed\u30c3\u30d7: \u30ad\u30e5\u30fc\u6642\u9593";
    t[100] = "Dropping tunnel requests: High job lag";
    t[101] = "\u30c8\u30f3\u30cd\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e2d\u65ad: \u9ad8\u3044\u30b8\u30e7\u30d6\u30e9\u30b0";
    t[102] = "Dropping tunnel requests: Too slow";
    t[103] = "\u30c8\u30f3\u30cd\u30eb\u8981\u6c42\u3092\u30c9\u30ed\u30c3\u30d7: \u9045\u3059\u304e\u307e\u3059";
    t[104] = "Disconnected";
    t[105] = "\u5207\u65ad";
    t[106] = "Rejecting most tunnels: High number of requests";
    t[107] = "\u5927\u90e8\u5206\u306e\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u30ea\u30af\u30a8\u30b9\u30c8\u6570\u904e\u591a";
    t[124] = "Port Conflict";
    t[125] = "\u30dd\u30fc\u30c8\u7af6\u5408";
    t[130] = "Rejecting tunnels: Starting up";
    t[131] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u8d77\u52d5\u4e2d";
    t[132] = "Rejecting tunnels: High message delay";
    t[133] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u30e1\u30c3\u30bb\u30fc\u30b8\u9045\u5ef6\u5927";
    t[138] = "IPv4: Symmetric NAT; IPv6: Testing";
    t[139] = "IPv4: \u5bfe\u79f0\u578bNAT; IPv6: \u30c6\u30b9\u30c8\u4e2d";
    t[142] = "IPv4: Disabled; IPv6: Testing";
    t[143] = "IPv4: \u7121\u52b9; IPv6: \u30c6\u30b9\u30c8\u4e2d";
    t[152] = "IPv4: OK; IPv6: Testing";
    t[153] = "IPv4: OK; IPv6: \u30c6\u30b9\u30c8\u4e2d";
    t[158] = "Rejecting tunnels: Connection limit";
    t[159] = "\u30c8\u30f3\u30cd\u30eb\u3092\u62d2\u5426\u4e2d: \u63a5\u7d9a\u5236\u9650";
    t[164] = "IPv4: Firewalled; IPv6: Testing";
    t[165] = "IPv4: \u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u6709\u52b9; IPv6: \u30c6\u30b9\u30c8\u4e2d";
    table = t;
  }
  public java.lang.Object handleGetObject (java.lang.String msgid) throws java.util.MissingResourceException {
    int hash_val = msgid.hashCode() & 0x7fffffff;
    int idx = (hash_val % 83) << 1;
    {
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
    int incr = ((hash_val % 81) + 1) << 1;
    for (;;) {
      idx += incr;
      if (idx >= 166)
        idx -= 166;
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
  }
  public java.util.Enumeration getKeys () {
    return
      new java.util.Enumeration() {
        private int idx = 0;
        { while (idx < 166 && table[idx] == null) idx += 2; }
        public boolean hasMoreElements () {
          return (idx < 166);
        }
        public java.lang.Object nextElement () {
          java.lang.Object key = table[idx];
          do idx += 2; while (idx < 166 && table[idx] == null);
          return key;
        }
      };
  }
  public java.util.ResourceBundle getParent () {
    return parent;
  }
}
