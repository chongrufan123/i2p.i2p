/* Automatically generated by GNU msgfmt.  Do not modify!  */
package net.i2p.client.streaming;
public class messages_ar extends java.util.ResourceBundle {
  private static final java.lang.String[] table;
  static {
    java.lang.String[] t = new java.lang.String[86];
    t[0] = "";
    t[1] = "Project-Id-Version: I2P\nReport-Msgid-Bugs-To: \nPO-Revision-Date: 2018-09-20 19:01+0000\nLast-Translator: Tashigi OP\nLanguage-Team: Arabic (http://www.transifex.com/otf/I2P/language/ar/)\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nLanguage: ar\nPlural-Forms: nplurals=6; plural=n==0 ? 0 : n==1 ? 1 : n==2 ? 2 : n%100>=3 && n%100<=10 ? 3 : n%100>=11 && n%100<=99 ? 4 : 5;\n";
    t[2] = "Message expired";
    t[3] = "\u0627\u0646\u062a\u0647\u062a \u0627\u0644\u0631\u0633\u0627\u0644\u0629";
    t[6] = "Invalid destination";
    t[7] = "\u0639\u0646\u0648\u0627\u0646 \u063a\u064a\u0631 \u0645\u0648\u062c\u0648\u062f";
    t[10] = "Local lease set invalid";
    t[11] = "\u062a\u0639\u064a\u064a\u0646 \u0627\u0644\u0639\u0642\u062f \u0627\u0644\u0645\u062d\u0644\u064a \u063a\u064a\u0631 \u0635\u0627\u0644\u062d";
    t[12] = "Connection was reset";
    t[13] = "\u062a\u0645\u062a \u0625\u0639\u0627\u062f\u0629 \u0636\u0628\u0637 \u0627\u0644\u0627\u062a\u0635\u0627\u0644";
    t[22] = "Local network failure";
    t[23] = "\u0641\u0634\u0644\u062a \u0627\u0644\u0634\u0628\u0643\u0629 \u0627\u0644\u0645\u062d\u0644\u064a\u0629";
    t[30] = "No local tunnels";
    t[31] = "\u0644\u0627 \u062a\u0648\u062c\u062f \u0623\u0646\u0641\u0627\u0642 \u0645\u062d\u0644\u064a\u0629";
    t[36] = "Failed delivery to local destination";
    t[37] = "\u0641\u0634\u0644 \u0627\u0644\u062a\u0633\u0644\u064a\u0645 \u0625\u0644\u0649 \u0627\u0644\u0648\u062c\u0647\u0629 \u0627\u0644\u0645\u062d\u0644\u064a\u0629";
    t[38] = "Unsupported encryption options";
    t[39] = "\u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0644\u062a\u0634\u0641\u064a\u0631 \u063a\u064a\u0631 \u0645\u062f\u0639\u0648\u0645\u0629";
    t[40] = "Local router failure";
    t[41] = "\u0641\u0634\u0644 \u0627\u0644\u0645\u0648\u062c\u0647 \u0627\u0644\u0645\u062d\u0644\u064a";
    t[44] = "Failure code";
    t[45] = "\u0641\u0634\u0644\u062a \u0627\u0644\u0634\u0641\u0631\u0629";
    t[50] = "Invalid message";
    t[51] = "\u0631\u0633\u0627\u0644\u0629 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d\u0629";
    t[56] = "Message timeout";
    t[57] = "\u0646\u0641\u0630 \u0648\u0642\u062a \u0627\u0644\u0631\u0633\u0627\u0644\u0629";
    t[58] = "Session closed";
    t[59] = "\u0627\u0644\u062c\u0644\u0633\u0629 \u0645\u063a\u0644\u0642\u0629";
    t[60] = "Local destination shutdown";
    t[61] = "\u0627\u063a\u0644\u0627\u0642 \u0627\u0644\u0648\u062c\u0647\u0629 \u0627\u0644\u0645\u062d\u0644\u064a\u0629";
    t[64] = "Destination lease set expired";
    t[65] = "\u0627\u0646\u062a\u0647\u0649 \u062a\u0639\u064a\u064a\u0646 \u0639\u0642\u062f \u0627\u0644\u0648\u062c\u0647\u0629";
    t[68] = "Buffer overflow";
    t[69] = "\u062a\u062c\u0627\u0648\u0632 \u0633\u0639\u0629 \u0627\u0644\u0645\u062e\u0632\u0646 \u0627\u0644\u0645\u0624\u0642\u062a";
    t[72] = "Destination lease set not found";
    t[73] = "\u0644\u0645 \u064a\u062a\u0645 \u0627\u0644\u0639\u062b\u0648\u0631 \u0639\u0644\u0649 \u0639\u0642\u062f \u0627\u0644\u0648\u062c\u0647\u0629";
    t[82] = "Invalid message options";
    t[83] = "\u062e\u064a\u0627\u0631\u0627\u062a \u0627\u0644\u0631\u0633\u0627\u0626\u0644 \u063a\u064a\u0631 \u0635\u0627\u0644\u062d\u0629";
    table = t;
  }
  public java.lang.Object handleGetObject (java.lang.String msgid) throws java.util.MissingResourceException {
    int hash_val = msgid.hashCode() & 0x7fffffff;
    int idx = (hash_val % 43) << 1;
    {
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
    int incr = ((hash_val % 41) + 1) << 1;
    for (;;) {
      idx += incr;
      if (idx >= 86)
        idx -= 86;
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
  }
  public java.util.Enumeration getKeys () {
    return
      new java.util.Enumeration() {
        private int idx = 0;
        { while (idx < 86 && table[idx] == null) idx += 2; }
        public boolean hasMoreElements () {
          return (idx < 86);
        }
        public java.lang.Object nextElement () {
          java.lang.Object key = table[idx];
          do idx += 2; while (idx < 86 && table[idx] == null);
          return key;
        }
      };
  }
  public java.util.ResourceBundle getParent () {
    return parent;
  }
}
