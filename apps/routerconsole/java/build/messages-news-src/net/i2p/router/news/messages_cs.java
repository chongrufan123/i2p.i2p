/* Automatically generated by GNU msgfmt.  Do not modify!  */
package net.i2p.router.news;
public class messages_cs extends java.util.ResourceBundle {
  private static final java.lang.String[] table;
  static {
    java.lang.String[] t = new java.lang.String[56];
    t[0] = "";
    t[1] = "Project-Id-Version: I2P\nReport-Msgid-Bugs-To: \nPO-Revision-Date: 2021-07-08 14:30+0000\nLast-Translator: slrslr\nLanguage-Team: Czech (http://www.transifex.com/otf/I2P/language/cs/)\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nLanguage: cs\nPlural-Forms: nplurals=4; plural=(n == 1 && n % 1 == 0) ? 0 : (n >= 2 && n <= 4 && n % 1 == 0) ? 1: (n % 1 != 0 ) ? 2 : 3;\n";
    t[2] = "Welcome to I2P!";
    t[3] = "V\u00edtejte v I2P!";
    t[4] = "Just enter 127.0.0.1 (or localhost) port 4444 as a http proxy into your browser settings.";
    t[5] = "Vlo\u017ete HTTP proxy 127.0.0.1 (nebo localhost) a port 4444 do nastaven\u00ed internetov\u00e9ho prohl\u00ed\u017ee\u010de.";
    t[6] = "I2P Development Team";
    t[7] = "T\u00fdm v\u00fdvoje I2P";
    t[12] = "Once you have a \"shared clients\" destination listed on the left, please {0}check out{1} our {2}FAQ{3}.";
    t[13] = "Jakmile bude v seznamu \"sd\u00edlen\u00ed klienti\" nalevo c\u00edl, pros\u00edm {0}zkontrolujte{1} FAQ {2}\u010dasto kladen\u00e9 dotazy{3}.";
    t[14] = "Please {0}have patience{1} as I2P boots up and finds peers.";
    t[15] = "Pros\u00edm {0}bu\u010fte trp\u011bliv\u00ed{1}, I2P startuje a hled\u00e1 peery.";
    t[16] = "Also you can setup your browser to use the I2P proxy to reach eepsites.";
    t[17] = "Tak\u00e9 m\u016f\u017eete nastavit v\u00e1\u0161 prohl\u00ed\u017ee\u010d aby pou\u017e\u00edval I2P proxy k dosa\u017een\u00ed eepsites.";
    t[20] = "Congratulations on getting I2P installed!";
    t[21] = "Gratulujeme k nainstalov\u00e1n\u00ed I2P!";
    t[32] = "More information can be found on the {0}I2P browser proxy setup page{1}.";
    t[33] = "V\u00edce informac\u00ed m\u016f\u017eete naj\u00edt na {0}str\u00e1nce I2P nastaven\u00ed proxy prohl\u00ed\u017ee\u010de{1}.";
    t[34] = "Point your IRC client to {0}localhost:6668{1} and say hi to us on {2}#i2p{3}.";
    t[35] = "Nastavte sv\u00e9ho IRC klienta na {0}localhost:6668{1} a pozdravte n\u00e1s na {2}#i2p{3}.";
    t[44] = "While you are waiting, please {0}adjust your bandwidth settings{1} on the {2}configuration page{3}.";
    t[45] = "Pros\u00edm {0}upravte nastaven\u00ed datov\u00e9ho p\u0159enosu{1} na str\u00e1nce {2}nastaven\u00ed{3}.";
    t[50] = "Do not use SOCKS for this.";
    t[51] = "Nepou\u017e\u00edvejte SOCKS v tomto p\u0159\u00edpad\u011b.";
    table = t;
  }
  public java.lang.Object handleGetObject (java.lang.String msgid) throws java.util.MissingResourceException {
    int hash_val = msgid.hashCode() & 0x7fffffff;
    int idx = (hash_val % 28) << 1;
    java.lang.Object found = table[idx];
    if (found != null && msgid.equals(found))
      return table[idx + 1];
    return null;
  }
  public java.util.Enumeration getKeys () {
    return
      new java.util.Enumeration() {
        private int idx = 0;
        { while (idx < 56 && table[idx] == null) idx += 2; }
        public boolean hasMoreElements () {
          return (idx < 56);
        }
        public java.lang.Object nextElement () {
          java.lang.Object key = table[idx];
          do idx += 2; while (idx < 56 && table[idx] == null);
          return key;
        }
      };
  }
  public java.util.ResourceBundle getParent () {
    return parent;
  }
}
