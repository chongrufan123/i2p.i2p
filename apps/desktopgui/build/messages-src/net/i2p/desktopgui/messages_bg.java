/* Automatically generated by GNU msgfmt.  Do not modify!  */
package net.i2p.desktopgui;
public class messages_bg extends java.util.ResourceBundle {
  private static final java.lang.String[] table;
  static {
    java.lang.String[] t = new java.lang.String[50];
    t[0] = "";
    t[1] = "Project-Id-Version: I2P\nReport-Msgid-Bugs-To: \nPO-Revision-Date: 2022-02-09 19:23+0000\nLast-Translator: zzzi2p\nLanguage-Team: Bulgarian (http://www.transifex.com/otf/I2P/language/bg/)\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nLanguage: bg\nPlural-Forms: nplurals=2; plural=(n != 1);\n";
    t[14] = "Starting";
    t[15] = "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435";
    t[16] = "Shutdown in {0}";
    t[17] = "\u0418\u0437\u043a\u043b\u044e\u0447\u0432\u0430\u043d\u0435 \u0432 {0}";
    t[24] = "Network";
    t[25] = "\u041c\u0440\u0435\u0436\u0430";
    t[26] = "Start I2P";
    t[27] = "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 I2P";
    t[32] = "Stop I2P";
    t[33] = "\u0421\u043f\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 I2P";
    t[34] = "Launch I2P Browser";
    t[35] = "\u0421\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 I2P \u0411\u0440\u0430\u0443\u0437\u0435\u0440";
    t[40] = "Restart I2P Immediately";
    t[41] = "\u0420\u0435\u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u0439\u0442\u0435 \u041d\u0435\u0437\u0430\u0431\u0430\u0432\u043d\u043e";
    t[42] = "Restart I2P";
    t[43] = "\u0420\u0435\u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d\u0435 \u043d\u0430 I2P";
    t[46] = "I2P is starting!";
    t[47] = "I2P \u0435 \u0441\u0442\u0430\u0440\u0442\u0438\u0440\u0430\u043d!";
    table = t;
  }
  public java.lang.Object handleGetObject (java.lang.String msgid) throws java.util.MissingResourceException {
    int hash_val = msgid.hashCode() & 0x7fffffff;
    int idx = (hash_val % 25) << 1;
    {
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
    int incr = ((hash_val % 23) + 1) << 1;
    for (;;) {
      idx += incr;
      if (idx >= 50)
        idx -= 50;
      java.lang.Object found = table[idx];
      if (found == null)
        return null;
      if (msgid.equals(found))
        return table[idx + 1];
    }
  }
  public java.util.Enumeration getKeys () {
    return
      new java.util.Enumeration() {
        private int idx = 0;
        { while (idx < 50 && table[idx] == null) idx += 2; }
        public boolean hasMoreElements () {
          return (idx < 50);
        }
        public java.lang.Object nextElement () {
          java.lang.Object key = table[idx];
          do idx += 2; while (idx < 50 && table[idx] == null);
          return key;
        }
      };
  }
  public java.util.ResourceBundle getParent () {
    return parent;
  }
}
